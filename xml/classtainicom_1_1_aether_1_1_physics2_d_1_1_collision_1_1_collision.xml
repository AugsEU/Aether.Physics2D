<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision" kind="class" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Collision::Collision</compoundname>
    <innerclass refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1_1_e_p_collider" prot="private">tainicom::Aether::Physics2D::Collision::Collision::EPCollider</innerclass>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a8e346d4c79f1d56c04f10acb00e1d215" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tainicom.Aether.Physics2D.Collision.Collision.TestOverlap</definition>
        <argsstring>(Shape shapeA, int indexA, Shape shapeB, int indexB, ref Transform xfA, ref Transform xfB)</argsstring>
        <name>TestOverlap</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
          <declname>shapeA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
          <declname>shapeB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Test overlap between the two shapes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shapeA</parametername>
</parameternamelist>
<parameterdescription>
<para>The first shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexA</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for the first shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shapeB</parametername>
</parameternamelist>
<parameterdescription>
<para>The second shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexB</parametername>
</parameternamelist>
<parameterdescription>
<para>The index for the second shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfA</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform for the first shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfB</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform for the seconds shape.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="599" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="599" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1ace41dc3caaed4a855ef627af8698b71c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.GetPointStates</definition>
        <argsstring>(out FixedArray2&lt; PointState &gt; state1, out FixedArray2&lt; PointState &gt; state2, ref Manifold manifold1, ref Manifold manifold2)</argsstring>
        <name>GetPointStates</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2" kindref="compound">FixedArray2</ref>&lt; <ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1ac9f32de7d709b821235a729a69069aef" kindref="member">PointState</ref> &gt;</type>
          <declname>state1</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2" kindref="compound">FixedArray2</ref>&lt; <ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1ac9f32de7d709b821235a729a69069aef" kindref="member">PointState</ref> &gt;</type>
          <declname>state2</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold1</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="615" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="615" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a0a5f306c34459a0788e8d6cb082705f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.CollideCircles</definition>
        <argsstring>(ref Manifold manifold, CircleShape circleA, ref Transform xfA, CircleShape circleB, ref Transform xfB)</argsstring>
        <name>CollideCircles</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_circle_shape" kindref="compound">CircleShape</ref></type>
          <declname>circleA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_circle_shape" kindref="compound">CircleShape</ref></type>
          <declname>circleB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Compute the collision manifold between two circles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="658" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="658" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1aa8e8f4ffbbbadd79041272f7fb954ed9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.CollidePolygonAndCircle</definition>
        <argsstring>(ref Manifold manifold, PolygonShape polygonA, ref Transform xfA, CircleShape circleB, ref Transform xfB)</argsstring>
        <name>CollidePolygonAndCircle</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>polygonA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_circle_shape" kindref="compound">CircleShape</ref></type>
          <declname>circleB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Compute the collision manifold between a polygon and a circle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifold</parametername>
</parameternamelist>
<parameterdescription>
<para>The manifold.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygonA</parametername>
</parameternamelist>
<parameterdescription>
<para>The polygon A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfA</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circleB</parametername>
</parameternamelist>
<parameterdescription>
<para>The circle B.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfB</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of B.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="694" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="694" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a79a510ff4a9ec87d21adef7210bfb346" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.CollidePolygons</definition>
        <argsstring>(ref Manifold manifold, PolygonShape polyA, ref Transform transformA, PolygonShape polyB, ref Transform transformB)</argsstring>
        <name>CollidePolygons</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>polyA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transformA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>polyB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transformB</declname>
        </param>
        <briefdescription>
<para>Compute the collision manifold between two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifold</parametername>
</parameternamelist>
<parameterdescription>
<para>The manifold.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyA</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformA</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyB</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly B.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformB</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform B.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="840" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="840" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1abf9ea5dafa519f2b00f722bfc7d0eb56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.CollideEdgeAndCircle</definition>
        <argsstring>(ref Manifold manifold, EdgeShape edgeA, ref Transform transformA, CircleShape circleB, ref Transform transformB)</argsstring>
        <name>CollideEdgeAndCircle</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape" kindref="compound">EdgeShape</ref></type>
          <declname>edgeA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transformA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_circle_shape" kindref="compound">CircleShape</ref></type>
          <declname>circleB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transformB</declname>
        </param>
        <briefdescription>
<para>Compute contact points for edge versus circle. This accounts for edge connectivity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifold</parametername>
</parameternamelist>
<parameterdescription>
<para>The manifold.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edgeA</parametername>
</parameternamelist>
<parameterdescription>
<para>The edge A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformA</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circleB</parametername>
</parameternamelist>
<parameterdescription>
<para>The circle B.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformB</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform B.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="978" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="978" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a176b4e3da02f18e25375137907148472" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.CollideEdgeAndPolygon</definition>
        <argsstring>(ref Manifold manifold, EdgeShape edgeA, ref Transform xfA, PolygonShape polygonB, ref Transform xfB)</argsstring>
        <name>CollideEdgeAndPolygon</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold" kindref="compound">Manifold</ref></type>
          <declname>manifold</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape" kindref="compound">EdgeShape</ref></type>
          <declname>edgeA</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfA</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>polygonB</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xfB</declname>
        </param>
        <briefdescription>
<para>Collides and edge and a polygon, taking into account edge adjacency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifold</parametername>
</parameternamelist>
<parameterdescription>
<para>The manifold.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edgeA</parametername>
</parameternamelist>
<parameterdescription>
<para>The edge A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfA</parametername>
</parameternamelist>
<parameterdescription>
<para>The xf A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygonB</parametername>
</parameternamelist>
<parameterdescription>
<para>The polygon B.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xfB</parametername>
</parameternamelist>
<parameterdescription>
<para>The xf B.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="1123" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="1123" bodyend="1126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1afa751de3d686099126c62deb699fdd19" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tainicom.Aether.Physics2D.Collision.Collision.ClipSegmentToLine</definition>
        <argsstring>(out FixedArray2&lt; ClipVertex &gt; vOut, ref FixedArray2&lt; ClipVertex &gt; vIn, Vector2 normal, float offset, int vertexIndexA)</argsstring>
        <name>ClipSegmentToLine</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2" kindref="compound">FixedArray2</ref>&lt; <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_clip_vertex" kindref="compound">ClipVertex</ref> &gt;</type>
          <declname>vOut</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2" kindref="compound">FixedArray2</ref>&lt; <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_clip_vertex" kindref="compound">ClipVertex</ref> &gt;</type>
          <declname>vIn</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>normal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vertexIndexA</declname>
        </param>
        <briefdescription>
<para>Clipping for contact manifolds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vOut</parametername>
</parameternamelist>
<parameterdescription>
<para>The v out.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vIn</parametername>
</parameternamelist>
<parameterdescription>
<para>The v in.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normal</parametername>
</parameternamelist>
<parameterdescription>
<para>The normal.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertexIndexA</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex index A.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="1645" column="28" bodyfile="Physics2D/Collision/Collision.cs" bodystart="1645" bodyend="1686"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1ac1322ccc8c59c3a9a2fdefd428adf274" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float tainicom.Aether.Physics2D.Collision.Collision.EdgeSeparation</definition>
        <argsstring>(PolygonShape poly1, ref Transform xf1To2, int edge1, PolygonShape poly2)</argsstring>
        <name>EdgeSeparation</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly1</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf1To2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>edge1</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly2</declname>
        </param>
        <briefdescription>
<para>Find the separation between poly1 and poly2 for a give edge normal on poly1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>poly1</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly1.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xf1</parametername>
</parameternamelist>
<parameterdescription>
<para>The XF1.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge1</parametername>
</parameternamelist>
<parameterdescription>
<para>The edge1.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poly2</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly2.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xf2</parametername>
</parameternamelist>
<parameterdescription>
<para>The XF2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="1697" column="30" bodyfile="Physics2D/Collision/Collision.cs" bodystart="1697" bodyend="1729"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1afecca025f66563619d372102f58e165d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float tainicom.Aether.Physics2D.Collision.Collision.FindMaxSeparation</definition>
        <argsstring>(out int edgeIndex, PolygonShape poly1, ref Transform xf1, PolygonShape poly2, ref Transform xf2)</argsstring>
        <name>FindMaxSeparation</name>
        <param>
          <type>out int</type>
          <declname>edgeIndex</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly1</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf1</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly2</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf2</declname>
        </param>
        <briefdescription>
<para>Find the max separation between poly1 and poly2 using edge normals from poly1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>edgeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the edge.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poly1</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly1.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xf1</parametername>
</parameternamelist>
<parameterdescription>
<para>The XF1.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poly2</parametername>
</parameternamelist>
<parameterdescription>
<para>The poly2.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xf2</parametername>
</parameternamelist>
<parameterdescription>
<para>The XF2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="1740" column="30" bodyfile="Physics2D/Collision/Collision.cs" bodystart="1740" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1aad3a24b14250f366398e5fd8f2e94d9c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Collision.Collision.FindIncidentEdge</definition>
        <argsstring>(out FixedArray2&lt; ClipVertex &gt; c, PolygonShape poly1, ref Transform xf1, int edge1, PolygonShape poly2, ref Transform xf2)</argsstring>
        <name>FindIncidentEdge</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2" kindref="compound">FixedArray2</ref>&lt; <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_clip_vertex" kindref="compound">ClipVertex</ref> &gt;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly1</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>edge1</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_polygon_shape" kindref="compound">PolygonShape</ref></type>
          <declname>poly2</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Collision.cs" line="1822" column="29" bodyfile="Physics2D/Collision/Collision.cs" bodystart="1822" bodyend="1872"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_collision" kindref="compound">Collision</ref> methods </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Physics2D/Collision/Collision.cs" line="587" column="19" bodyfile="Physics2D/Collision/Collision.cs" bodystart="588" bodyend="1873"/>
    <listofallmembers>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1afa751de3d686099126c62deb699fdd19" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>ClipSegmentToLine</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a0a5f306c34459a0788e8d6cb082705f2" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>CollideCircles</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1abf9ea5dafa519f2b00f722bfc7d0eb56" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>CollideEdgeAndCircle</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a176b4e3da02f18e25375137907148472" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>CollideEdgeAndPolygon</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1aa8e8f4ffbbbadd79041272f7fb954ed9" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>CollidePolygonAndCircle</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a79a510ff4a9ec87d21adef7210bfb346" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>CollidePolygons</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1ac1322ccc8c59c3a9a2fdefd428adf274" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>EdgeSeparation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1aad3a24b14250f366398e5fd8f2e94d9c" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>FindIncidentEdge</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1afecca025f66563619d372102f58e165d" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>FindMaxSeparation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1ace41dc3caaed4a855ef627af8698b71c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>GetPointStates</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_collision_1a8e346d4c79f1d56c04f10acb00e1d215" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Collision</scope><name>TestOverlap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
