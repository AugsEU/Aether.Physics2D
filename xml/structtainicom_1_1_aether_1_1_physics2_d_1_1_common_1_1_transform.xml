<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kind="struct" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Common::Transform</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ae0af81da8d56ad2d3d5d14974d3c061e" prot="private" static="yes" mutable="no">
        <type>readonly <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>readonly Transform tainicom.Aether.Physics2D.Common.Transform._identity</definition>
        <argsstring></argsstring>
        <name>_identity</name>
        <initializer>= new <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref>(Vector2.Zero, Complex.One)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="550" column="43" bodyfile="Physics2D/Common/Math.cs" bodystart="550" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ab3cc0b4e3692cca2a41dc2675db276a6" prot="public" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex" kindref="compound">Complex</ref></type>
        <definition>Complex tainicom.Aether.Physics2D.Common.Transform.q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="552" column="24" bodyfile="Physics2D/Common/Math.cs" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a8b279f45f8bf79e749d06d9be0eac591" prot="public" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Common.Transform.p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="553" column="24" bodyfile="Physics2D/Common/Math.cs" bodystart="553" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a1a36f5befa0c410a28f9606c3904a9db" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform tainicom.Aether.Physics2D.Common.Transform.Identity</definition>
        <argsstring></argsstring>
        <name>Identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="555" column="33" bodyfile="Physics2D/Common/Math.cs" bodystart="555" bodyend="555"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1abb587fa97b8de8d212472eda2cf7ee06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Common.Transform.Transform</definition>
        <argsstring>(Vector2 position, Complex rotation)</argsstring>
        <name>Transform</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex" kindref="compound">Complex</ref></type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Initialize using a position vector and a <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex" kindref="compound">Complex</ref> rotation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="562" column="16" bodyfile="Physics2D/Common/Math.cs" bodystart="562" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a03eaffa1d3b94ac1318be69c39a7ebfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Common.Transform.Transform</definition>
        <argsstring>(Vector2 position, float angle)</argsstring>
        <name>Transform</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Initialize using a position vector and a rotation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation angle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="573" column="16" bodyfile="Physics2D/Common/Math.cs" bodystart="573" bodyend="576"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a53d8d389316e364545fa7b547628b60e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>static Vector2 tainicom.Aether.Physics2D.Common.Transform.Multiply</definition>
        <argsstring>(Vector2 left, ref Transform right)</argsstring>
        <name>Multiply</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="578" column="31" bodyfile="Physics2D/Common/Math.cs" bodystart="578" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1aea3465be8d0725e6ee9e1f2703c27ec8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>static Vector2 tainicom.Aether.Physics2D.Common.Transform.Multiply</definition>
        <argsstring>(ref Vector2 left, ref Transform right)</argsstring>
        <name>Multiply</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="583" column="31" bodyfile="Physics2D/Common/Math.cs" bodystart="583" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a2833f4033a5a96f658eb809a4a073c48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>static Vector2 tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(Vector2 left, ref Transform right)</argsstring>
        <name>Divide</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="591" column="31" bodyfile="Physics2D/Common/Math.cs" bodystart="591" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ae5f756b8427f60133c3d7a42cf5349e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>static Vector2 tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(ref Vector2 left, ref Transform right)</argsstring>
        <name>Divide</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="596" column="31" bodyfile="Physics2D/Common/Math.cs" bodystart="596" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a5670fddfc21624844f6f7d3b479d525d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(Vector2 left, ref Transform right, out Vector2 result)</argsstring>
        <name>Divide</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="606" column="28" bodyfile="Physics2D/Common/Math.cs" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a29b16014379c817c40147bb0b058328a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>static Transform tainicom.Aether.Physics2D.Common.Transform.Multiply</definition>
        <argsstring>(ref Transform left, ref Transform right)</argsstring>
        <name>Multiply</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="615" column="33" bodyfile="Physics2D/Common/Math.cs" bodystart="615" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a27d0a19941ff0cd752870c68eba64c8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>static Transform tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(ref Transform left, ref Transform right)</argsstring>
        <name>Divide</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="622" column="33" bodyfile="Physics2D/Common/Math.cs" bodystart="622" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1accf074aaf8bcff0a71414cd6c6a541ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(ref Transform left, ref Transform right, out Transform result)</argsstring>
        <name>Divide</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="629" column="28" bodyfile="Physics2D/Common/Math.cs" bodystart="629" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1aee3121634c4858a41304fec9cfa3e180" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Common.Transform.Multiply</definition>
        <argsstring>(ref Transform left, Complex right, out Transform result)</argsstring>
        <name>Multiply</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex" kindref="compound">Complex</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="635" column="28" bodyfile="Physics2D/Common/Math.cs" bodystart="635" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a2aa2be06536447c263abafa8c09fdd26" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tainicom.Aether.Physics2D.Common.Transform.Divide</definition>
        <argsstring>(ref Transform left, Complex right, out Transform result)</argsstring>
        <name>Divide</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex" kindref="compound">Complex</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Common/Math.cs" line="641" column="28" bodyfile="Physics2D/Common/Math.cs" bodystart="641" bodyend="645"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>tainicom.Aether.Physics2D.Common.Transform</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform"/>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>tainicom.Aether.Physics2D.Common.Complex</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex"/>
      </node>
      <node id="2">
        <label>tainicom.Aether.Physics2D.Common.Vector2</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IEquatable&lt; Vector2 &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Physics2D/Common/Math.cs" line="548" column="11" bodyfile="Physics2D/Common/Math.cs" bodystart="549" bodyend="646"/>
    <listofallmembers>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ae0af81da8d56ad2d3d5d14974d3c061e" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>_identity</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a2833f4033a5a96f658eb809a4a073c48" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ae5f756b8427f60133c3d7a42cf5349e3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a5670fddfc21624844f6f7d3b479d525d" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a27d0a19941ff0cd752870c68eba64c8e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1accf074aaf8bcff0a71414cd6c6a541ac" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a2aa2be06536447c263abafa8c09fdd26" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Divide</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a1a36f5befa0c410a28f9606c3904a9db" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Identity</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a53d8d389316e364545fa7b547628b60e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Multiply</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1aea3465be8d0725e6ee9e1f2703c27ec8" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Multiply</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a29b16014379c817c40147bb0b058328a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Multiply</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1aee3121634c4858a41304fec9cfa3e180" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Multiply</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a8b279f45f8bf79e749d06d9be0eac591" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>p</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1ab3cc0b4e3692cca2a41dc2675db276a6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>q</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1abb587fa97b8de8d212472eda2cf7ee06" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Transform</name></member>
      <member refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform_1a03eaffa1d3b94ac1318be69c39a7ebfe" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Common::Transform</scope><name>Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
