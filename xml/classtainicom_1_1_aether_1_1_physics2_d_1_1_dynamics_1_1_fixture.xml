<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kind="class" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Dynamics::Fixture</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a03a669a83ff178b22952d974081a6c61" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Fixture._isSensor</definition>
        <argsstring></argsstring>
        <name>_isSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="50" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a69bd6d866f09b3b90b4342f351b321d2" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Fixture._friction</definition>
        <argsstring></argsstring>
        <name>_friction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="51" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae60b879c32669bdf18e88a44d332da70" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Fixture._restitution</definition>
        <argsstring></argsstring>
        <name>_restitution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="52" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae6375d2d6f6a001980797bea9d344a40" prot="package" static="no" mutable="no">
        <type>Category</type>
        <definition>Category tainicom.Aether.Physics2D.Dynamics.Fixture._collidesWith</definition>
        <argsstring></argsstring>
        <name>_collidesWith</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="54" column="27" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a47acd1a37ec5e1dc07c2a1c6e3d479cf" prot="package" static="no" mutable="no">
        <type>Category</type>
        <definition>Category tainicom.Aether.Physics2D.Dynamics.Fixture._collisionCategories</definition>
        <argsstring></argsstring>
        <name>_collisionCategories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="55" column="27" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aaeba27fc5e4c6ba30dc4264d5249b5e6" prot="package" static="no" mutable="no">
        <type>short</type>
        <definition>short tainicom.Aether.Physics2D.Dynamics.Fixture._collisionGroup</definition>
        <argsstring></argsstring>
        <name>_collisionGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="56" column="24" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aa3613fa676c168f5712288407f9814c2" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_proxy" kindref="compound">FixtureProxy</ref>[]</type>
        <definition>FixtureProxy [] tainicom.Aether.Physics2D.Dynamics.Fixture.Proxies</definition>
        <argsstring></argsstring>
        <name>Proxies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="58" column="29" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a7aa6f0e5bb1e83ef12d2ffa06a97e6d1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Dynamics.Fixture.ProxyCount</definition>
        <argsstring></argsstring>
        <name>ProxyCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="59" column="20" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab1dd821fd335df571ee32183f85fc3e6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>short</type>
        <definition>short tainicom.Aether.Physics2D.Dynamics.Fixture.CollisionGroup</definition>
        <argsstring></argsstring>
        <name>CollisionGroup</name>
        <briefdescription>
<para>Defaults to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_collision" kindref="compound">Collision</ref> groups allow a certain group of objects to never collide (negative) or always collide (positive). Zero means no collision group. Non-zero group filtering always wins against the mask bits.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="112" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="113" bodyend="123"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aae56e02d1d2711d7ca3151fb9404d0f8" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Category</type>
        <definition>Category tainicom.Aether.Physics2D.Dynamics.Fixture.CollidesWith</definition>
        <argsstring></argsstring>
        <name>CollidesWith</name>
        <briefdescription>
<para>Defaults to Category.All </para>
        </briefdescription>
        <detaileddescription>
<para>The collision mask bits. This states the categories that this fixture would accept for collision.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="131" column="25" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="132" bodyend="143"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2f8cd7532727481f0809072ea03e1011" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Category</type>
        <definition>Category tainicom.Aether.Physics2D.Dynamics.Fixture.CollisionCategories</definition>
        <argsstring></argsstring>
        <name>CollisionCategories</name>
        <briefdescription>
<para>The collision categories this fixture is a part of. </para>
        </briefdescription>
        <detaileddescription>
<para>Defaults to Category.Cat1</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="150" column="25" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="151" bodyend="162"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a79ddbb40cafdf04c4ae5e0da48659f37" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>Shape tainicom.Aether.Physics2D.Dynamics.Fixture.Shape</definition>
        <argsstring></argsstring>
        <name>Shape</name>
        <briefdescription>
<para>Get the child Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The shape.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="168" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a4b44a7e46ab9467ded645b4fdef20562" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Fixture.IsSensor</definition>
        <argsstring></argsstring>
        <name>IsSensor</name>
        <briefdescription>
<para>Gets or sets a value indicating whether this fixture is a sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if this instance is a sensor; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="174" column="21" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="175" bodyend="184"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2a09eb8a79b0e17b6903e56cc2a6a58f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
        <definition>Body tainicom.Aether.Physics2D.Dynamics.Fixture.Body</definition>
        <argsstring></argsstring>
        <name>Body</name>
        <briefdescription>
<para>Get the parent body of this fixture. This is null if the fixture is not attached. </para>
        </briefdescription>
        <detaileddescription>
<para>The body.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="190" column="21" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a81397ce0c95d7d6d91ceed25920f05d6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Fixture.Friction</definition>
        <argsstring></argsstring>
        <name>Friction</name>
        <briefdescription>
<para>Set the coefficient of friction. This will <emphasis>not</emphasis> change the friction of existing contacts. </para>
        </briefdescription>
        <detaileddescription>
<para>The friction.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="203" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a735154c197532b341766f37060382595" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Fixture.Restitution</definition>
        <argsstring></argsstring>
        <name>Restitution</name>
        <briefdescription>
<para>Set the coefficient of restitution. This will not change the restitution of existing contacts. </para>
        </briefdescription>
        <detaileddescription>
<para>The restitution.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="218" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="219" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a768aec4c87955703742bcb171ef361ee" prot="public" static="no" mutable="no">
        <type>AfterCollisionEventHandler</type>
        <definition>AfterCollisionEventHandler tainicom.Aether.Physics2D.Dynamics.Fixture.AfterCollision</definition>
        <argsstring></argsstring>
        <name>AfterCollision</name>
        <briefdescription>
<para>Fires after two shapes has collided and are solved. This gives you a chance to get the impact force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="64" column="43" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a0dfe27210a6f9b28159319937a9b23df" prot="public" static="no" mutable="no">
        <type>BeforeCollisionEventHandler</type>
        <definition>BeforeCollisionEventHandler tainicom.Aether.Physics2D.Dynamics.Fixture.BeforeCollision</definition>
        <argsstring></argsstring>
        <name>BeforeCollision</name>
        <briefdescription>
<para>Fires when two fixtures are close to each other. Due to how the broadphase works, this can be quite inaccurate as shapes are approximated using AABBs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="70" column="44" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a67a4e0ec365f28bb07bbcce1a2a1bd2c" prot="public" static="no" mutable="no">
        <type>OnCollisionEventHandler</type>
        <definition>OnCollisionEventHandler tainicom.Aether.Physics2D.Dynamics.Fixture.OnCollision</definition>
        <argsstring></argsstring>
        <name>OnCollision</name>
        <briefdescription>
<para>Fires when two shapes collide and a contact is created between them. Note that the first fixture argument is always the fixture that the delegate is subscribed to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="76" column="40" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a1f6735fed32b2287d1fcbef9f4710b31" prot="public" static="no" mutable="no">
        <type>OnSeparationEventHandler</type>
        <definition>OnSeparationEventHandler tainicom.Aether.Physics2D.Dynamics.Fixture.OnSeparation</definition>
        <argsstring></argsstring>
        <name>OnSeparation</name>
        <briefdescription>
<para>Fires when two shapes separate and a contact is removed between them. Note: This can in some cases be called multiple times, as a fixture can have multiple contacts. Note The first fixture argument is always the fixture that the delegate is subscribed to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="83" column="41" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1afcea70befa8313af8c46a1252cec131d" prot="public" static="no" mutable="no">
        <type>object</type>
        <definition>object tainicom.Aether.Physics2D.Dynamics.Fixture.Tag</definition>
        <argsstring></argsstring>
        <name>Tag</name>
        <briefdescription>
<para>Set the user data. Use this to store your application specific data. </para>
        </briefdescription>
        <detaileddescription>
<para>The user data.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="196" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab48212f51165293be3f2b020e15a6439" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Dynamics.Fixture.Fixture</definition>
        <argsstring>()</argsstring>
        <name>Fixture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="85" column="18" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="85" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2e5423ed803dc98dc855639043f0bdec" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.TouchProxies</definition>
        <argsstring>(IBroadPhase broadPhase)</argsstring>
        <name>TouchProxies</name>
        <param>
          <type><ref refid="interfacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_i_broad_phase" kindref="compound">IBroadPhase</ref></type>
          <declname>broadPhase</declname>
        </param>
        <briefdescription>
<para>Touch each proxy so that new pairs may be created </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>broadPhase</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="265" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a3c58790b1b740c8a559e5b2146269668" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.CreateProxies</definition>
        <argsstring>(IBroadPhase broadPhase, ref Transform xf)</argsstring>
        <name>CreateProxies</name>
        <param>
          <type><ref refid="interfacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_i_broad_phase" kindref="compound">IBroadPhase</ref></type>
          <declname>broadPhase</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="307" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="307" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aebe6b02ed2ab8fc556e0cd29822615aa" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.DestroyProxies</definition>
        <argsstring>(IBroadPhase broadPhase)</argsstring>
        <name>DestroyProxies</name>
        <param>
          <type><ref refid="interfacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_i_broad_phase" kindref="compound">IBroadPhase</ref></type>
          <declname>broadPhase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="328" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="328" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1acfb75dd652ea67b7ad8f171da72904b1" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.Synchronize</definition>
        <argsstring>(IBroadPhase broadPhase, ref Transform transform1, ref Transform transform2)</argsstring>
        <name>Synchronize</name>
        <param>
          <type><ref refid="interfacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_i_broad_phase" kindref="compound">IBroadPhase</ref></type>
          <declname>broadPhase</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform1</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="340" column="23" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="340" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1af2d1f3bbf7c22f083800a76570cc9468" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Fixture.CloneOnto</definition>
        <argsstring>(Body body, Shape shape)</argsstring>
        <name>CloneOnto</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Clones the fixture and attached shape onto the specified body. Note: This is used only by Deserialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The body you wish to clone the fixture onto.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cloned fixture.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="375" column="26" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="375" bodyend="388"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a6b38dff228c5e4a19760650099337fb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Dynamics.Fixture.Fixture</definition>
        <argsstring>(Shape shape)</argsstring>
        <name>Fixture</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="96" column="16" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a67178a72baa146890e0c80b50595b15b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Fixture.TestPoint</definition>
        <argsstring>(ref Vector2 point)</argsstring>
        <name>TestPoint</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Test a point for containment in this fixture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="276" column="21" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a3de284a5906c9a49d6ebaa4e77760537" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Fixture.RayCast</definition>
        <argsstring>(out RayCastOutput output, ref RayCastInput input, int childIndex)</argsstring>
        <name>RayCast</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_ray_cast_output" kindref="compound">RayCastOutput</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_ray_cast_input" kindref="compound">RayCastInput</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>childIndex</declname>
        </param>
        <briefdescription>
<para>Cast a ray against this Shape. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray-cast results.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray-cast input parameters.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="288" column="21" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae157cdeeb2ba2fadfaeaf9c3bf193e2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.GetAABB</definition>
        <argsstring>(out AABB aabb, int childIndex)</argsstring>
        <name>GetAABB</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>childIndex</declname>
        </param>
        <briefdescription>
<para>Get the fixture&apos;s AABB. This AABB may be enlarge and/or stale. If you need a more accurate AABB, compute it using the Shape and the body transform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="300" column="21" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab292cbd9d1591af9b401ee6f256aade8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Fixture.CloneOnto</definition>
        <argsstring>(Body body)</argsstring>
        <name>CloneOnto</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Clones the fixture onto the specified body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The body you wish to clone the fixture onto.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cloned fixture.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="364" column="24" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="364" bodyend="367"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1acaa79a95fcc5398db488ed6bae3dc3b4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Fixture.Refilter</definition>
        <argsstring>()</argsstring>
        <name>Refilter</name>
        <briefdescription>
<para><ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts" kindref="compound">Contacts</ref> are persistant and will keep being persistant unless they are flagged for filtering. This methods flags all contacts associated with the body for filtering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Fixture.cs" line="234" column="22" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="234" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A fixture is used to attach a Shape to a body for collision detection. A fixture inherits its transform from its parent. Fixtures hold additional non-geometric data such as friction, collision filters, etc. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Physics2D/Dynamics/Fixture.cs" line="48" column="11" bodyfile="Physics2D/Dynamics/Fixture.cs" bodystart="49" bodyend="389"/>
    <listofallmembers>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae6375d2d6f6a001980797bea9d344a40" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_collidesWith</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a47acd1a37ec5e1dc07c2a1c6e3d479cf" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_collisionCategories</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aaeba27fc5e4c6ba30dc4264d5249b5e6" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_collisionGroup</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a69bd6d866f09b3b90b4342f351b321d2" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_friction</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a03a669a83ff178b22952d974081a6c61" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_isSensor</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae60b879c32669bdf18e88a44d332da70" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>_restitution</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a768aec4c87955703742bcb171ef361ee" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>AfterCollision</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a0dfe27210a6f9b28159319937a9b23df" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>BeforeCollision</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2a09eb8a79b0e17b6903e56cc2a6a58f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Body</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab292cbd9d1591af9b401ee6f256aade8" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CloneOnto</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1af2d1f3bbf7c22f083800a76570cc9468" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CloneOnto</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aae56e02d1d2711d7ca3151fb9404d0f8" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CollidesWith</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2f8cd7532727481f0809072ea03e1011" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CollisionCategories</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab1dd821fd335df571ee32183f85fc3e6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CollisionGroup</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a3c58790b1b740c8a559e5b2146269668" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>CreateProxies</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aebe6b02ed2ab8fc556e0cd29822615aa" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>DestroyProxies</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ab48212f51165293be3f2b020e15a6439" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Fixture</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a6b38dff228c5e4a19760650099337fb6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Fixture</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a81397ce0c95d7d6d91ceed25920f05d6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Friction</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1ae157cdeeb2ba2fadfaeaf9c3bf193e2a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>GetAABB</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a4b44a7e46ab9467ded645b4fdef20562" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>IsSensor</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a67a4e0ec365f28bb07bbcce1a2a1bd2c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>OnCollision</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a1f6735fed32b2287d1fcbef9f4710b31" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>OnSeparation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1aa3613fa676c168f5712288407f9814c2" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Proxies</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a7aa6f0e5bb1e83ef12d2ffa06a97e6d1" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>ProxyCount</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a3de284a5906c9a49d6ebaa4e77760537" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>RayCast</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1acaa79a95fcc5398db488ed6bae3dc3b4" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Refilter</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a735154c197532b341766f37060382595" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Restitution</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a79ddbb40cafdf04c4ae5e0da48659f37" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Shape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1acfb75dd652ea67b7ad8f171da72904b1" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Synchronize</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1afcea70befa8313af8c46a1252cec131d" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>Tag</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a67178a72baa146890e0c80b50595b15b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>TestPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_1a2e5423ed803dc98dc855639043f0bdec" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Fixture</scope><name>TouchProxies</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
