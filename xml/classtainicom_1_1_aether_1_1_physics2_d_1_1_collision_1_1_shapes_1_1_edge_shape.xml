<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape" kind="class" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</compoundname>
    <basecompoundref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" prot="public" virt="non-virtual">tainicom.Aether.Physics2D.Collision.Shapes.Shape</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1acfd00263653a75663b4811bee0ceb3b2" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape._vertex1</definition>
        <argsstring></argsstring>
        <name>_vertex1</name>
        <briefdescription>
<para>Edge start vertex </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="45" column="26" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a1d0406767b65fe457cc29362a869fa84" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape._vertex2</definition>
        <argsstring></argsstring>
        <name>_vertex2</name>
        <briefdescription>
<para>Edge end vertex </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="50" column="26" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1adae6df4151a2976a395ea7c983579e94" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override int</type>
        <definition>override int tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.ChildCount</definition>
        <argsstring></argsstring>
        <name>ChildCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="72" column="29" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a72914d5d41d78cebeaade11fdc70f4c4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.HasVertex0</definition>
        <argsstring></argsstring>
        <name>HasVertex0</name>
        <briefdescription>
<para>Is true if the edge is connected to an adjacent vertex before vertex 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="80" column="21" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a8fdfe1122af03162b11b10e2204dec07" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.HasVertex3</definition>
        <argsstring></argsstring>
        <name>HasVertex3</name>
        <briefdescription>
<para>Is true if the edge is connected to an adjacent vertex after vertex2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="85" column="21" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a9e0aeec2a0114d1f1defdd9090cd6525" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Vertex0</definition>
        <argsstring></argsstring>
        <name>Vertex0</name>
        <briefdescription>
<para>Optional adjacent vertices. These are used for smooth collision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="90" column="24" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a4b607bee118094b241924533c5ca1c28" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Vertex3</definition>
        <argsstring></argsstring>
        <name>Vertex3</name>
        <briefdescription>
<para>Optional adjacent vertices. These are used for smooth collision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="95" column="24" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1aa864a8a74d4b3b1f1ab02871f44035a6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Vertex1</definition>
        <argsstring></argsstring>
        <name>Vertex1</name>
        <briefdescription>
<para>These are the edge vertices </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="100" column="24" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1addfe349008b4af20360756447eb9919b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Vertex2</definition>
        <argsstring></argsstring>
        <name>Vertex2</name>
        <briefdescription>
<para>These are the edge vertices </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="113" column="24" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="114" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a52276dbd8e5b77c1fb34088b31a81d11" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.EdgeShape</definition>
        <argsstring>()</argsstring>
        <name>EdgeShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="52" column="18" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ac90887ce48c0a85b59e64b2e4f374407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.EdgeShape</definition>
        <argsstring>(Vector2 start, Vector2 end)</argsstring>
        <name>EdgeShape</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape" kindref="compound">EdgeShape</ref> with the specified start and end. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the edge.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the edge.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="64" column="16" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ad1984d6ed40b904b9fbe36495f402b1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Set</definition>
        <argsstring>(Vector2 start, Vector2 end)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Set this as an isolated edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="128" column="21" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="128" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ae93b564d5aeee141c4bea0e8b2e129ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.TestPoint</definition>
        <argsstring>(ref Transform transform, ref Vector2 point)</argsstring>
        <name>TestPoint</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a4898b0a304aacdd16ec6e875ae5de249">TestPoint</reimplements>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Test a point for containment in this shape. Note: This only works for convex shapes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The shape world transform.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the point is inside the shape</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="138" column="30" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a7370ae0d915f194b0157aaa7b3e106d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.RayCast</definition>
        <argsstring>(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex)</argsstring>
        <name>RayCast</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a0d0442cf6e5e47488b5151e46bffdbc4">RayCast</reimplements>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_ray_cast_output" kindref="compound">RayCastOutput</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_ray_cast_input" kindref="compound">RayCastInput</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int</type>
          <declname>childIndex</declname>
        </param>
        <briefdescription>
<para>Cast a ray against a child shape. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray-cast results.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray-cast input parameters.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform to be applied to the shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The child shape index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the ray-cast hits the shape</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="143" column="30" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="143" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a511d1832d6faff5409ee7261be9dde17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.ComputeAABB</definition>
        <argsstring>(out AABB aabb, ref Transform transform, int childIndex)</argsstring>
        <name>ComputeAABB</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1aba253f85e4da9fa220a0dd99b1d8ee87">ComputeAABB</reimplements>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform</declname>
        </param>
        <param>
          <type>int</type>
          <declname>childIndex</declname>
        </param>
        <briefdescription>
<para>Given a transform, compute the associated axis aligned bounding box for a child shape. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb results.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The world transform of the shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The child shape index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="209" column="30" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="209" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ad269cf301bea9c57751e0c4866300dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override float</type>
        <definition>override float tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.ComputeSubmergedArea</definition>
        <argsstring>(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc)</argsstring>
        <name>ComputeSubmergedArea</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a83295af89a1298b43d7e9c4c6f0e06e1">ComputeSubmergedArea</reimplements>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>normal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>xf</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>sc</declname>
        </param>
        <briefdescription>
<para>Used for the buoyancy controller </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="255" column="31" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a6a899526ebfd705b1afc9d82b7621e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.CompareTo</definition>
        <argsstring>(EdgeShape shape)</argsstring>
        <name>CompareTo</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape" kindref="compound">EdgeShape</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="261" column="21" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="261" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ac8dbdd299a0191609140f383d5ba69e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>override Shape tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a21f97ac7d3fbb104aad7d7aaffb807b8">Clone</reimplements>
        <briefdescription>
<para>Clone the concrete shape </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A clone of the shape</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="271" column="31" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="271" bodyend="285"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a4a245843a5c697da9a74a8f21fd63837" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape.ComputeProperties</definition>
        <argsstring>()</argsstring>
        <name>ComputeProperties</name>
        <reimplements refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1aa39c4ce412e776f5f27fed7542bde00a">ComputeProperties</reimplements>
        <briefdescription>
<para>Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed about the local origin, not the centroid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="250" column="33" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="250" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. The connectivity information is used to ensure correct contact normals. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Shape</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape"/>
      </node>
      <node id="1">
        <label>tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>IEquatable&lt; MassData &gt;</label>
      </node>
      <node id="2">
        <label>Shape</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape"/>
        <childnode refid="3" relation="usage">
          <edgelabel>MassData</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tainicom.Aether.Physics2D.Collision.Shapes.MassData</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_mass_data"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>tainicom.Aether.Physics2D.Common.Vector2</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>IEquatable&lt; Vector2 &gt;</label>
      </node>
      <node id="1">
        <label>tainicom.Aether.Physics2D.Collision.Shapes.EdgeShape</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_vertex1</edgelabel>
          <edgelabel>_vertex2</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Physics2D/Collision/Shapes/EdgeShape.cs" line="40" column="11" bodyfile="Physics2D/Collision/Shapes/EdgeShape.cs" bodystart="41" bodyend="286"/>
    <listofallmembers>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a749177478fd5dad5077fbc60e41d95e2" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>_2radius</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1ac7c6eca1b040e0ba1c4e40f83cfb01ea" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>_density</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a13b7dc006ffd3d4af51cc52265c0e9ee" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>_radius</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1acfd00263653a75663b4811bee0ceb3b2" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>_vertex1</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a1d0406767b65fe457cc29362a869fa84" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>_vertex2</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1adae6df4151a2976a395ea7c983579e94" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>ChildCount</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ac8dbdd299a0191609140f383d5ba69e2" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Clone</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a6a899526ebfd705b1afc9d82b7621e66" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>CompareTo</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a511d1832d6faff5409ee7261be9dde17" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>ComputeAABB</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a4a245843a5c697da9a74a8f21fd63837" prot="protected" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>ComputeProperties</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ad269cf301bea9c57751e0c4866300dad" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>ComputeSubmergedArea</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a614f1b5a2bc528686bbc14f8a941ec8e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Density</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a52276dbd8e5b77c1fb34088b31a81d11" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>EdgeShape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ac90887ce48c0a85b59e64b2e4f374407" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>EdgeShape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a72914d5d41d78cebeaade11fdc70f4c4" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>HasVertex0</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a8fdfe1122af03162b11b10e2204dec07" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>HasVertex3</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a42902f0e0b0412455913d6a456455876" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>MassData</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a9040394cf542432b04d8ec2993ded2c2" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Radius</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a7370ae0d915f194b0157aaa7b3e106d5" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>RayCast</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ad1984d6ed40b904b9fbe36495f402b1f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Set</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1a601cafb41a8763154cfae4a2616b1bba" prot="protected" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Shape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape_1ab075176597a7a613be7c1c24e2c6070f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>ShapeType</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1ae93b564d5aeee141c4bea0e8b2e129ed" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>TestPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a9e0aeec2a0114d1f1defdd9090cd6525" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Vertex0</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1aa864a8a74d4b3b1f1ab02871f44035a6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Vertex1</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1addfe349008b4af20360756447eb9919b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Vertex2</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_edge_shape_1a4b607bee118094b241924533c5ca1c28" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::Shapes::EdgeShape</scope><name>Vertex3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
