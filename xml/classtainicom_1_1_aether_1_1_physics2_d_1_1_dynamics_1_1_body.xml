<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kind="class" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Dynamics::Body</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2d88ec22b12c0d10f4c8ac70c19ae213" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._angularDamping</definition>
        <argsstring></argsstring>
        <name>_angularDamping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="49" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a44a44d62a34ea68912b2770dcc9b38e3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1a6e7d1615336b3770adf0713570b7dc09" kindref="member">BodyType</ref></type>
        <definition>BodyType tainicom.Aether.Physics2D.Dynamics.Body._bodyType</definition>
        <argsstring></argsstring>
        <name>_bodyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="50" column="26" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab3fdcdf39130472bc41ee587da498859" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._inertia</definition>
        <argsstring></argsstring>
        <name>_inertia</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="51" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a83799ad4519b1ece02182472eeed9763" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._linearDamping</definition>
        <argsstring></argsstring>
        <name>_linearDamping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="52" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae7ca5026a8568188e49a945b214fcace" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._mass</definition>
        <argsstring></argsstring>
        <name>_mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="53" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a76089d593753e1c801ec075cc5e6afd6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body._sleepingAllowed</definition>
        <argsstring></argsstring>
        <name>_sleepingAllowed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="54" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ac9865183ca8e0e1a6e1f40ca09099866" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body._awake</definition>
        <argsstring></argsstring>
        <name>_awake</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="55" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aae6d1d9817bf272a68dc5aed9f653ac9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body._fixedRotation</definition>
        <argsstring></argsstring>
        <name>_fixedRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="56" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af922f78083b3d7ba44a7229cd210efd0" prot="package" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body._enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="58" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a516bebe571f915945c914e11badbb087" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._angularVelocity</definition>
        <argsstring></argsstring>
        <name>_angularVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="59" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a353e51031ae295d1c51c659a737b4730" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body._linearVelocity</definition>
        <argsstring></argsstring>
        <name>_linearVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="60" column="26" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a92fa86f230f5c62564707f4ee228bb" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body._force</definition>
        <argsstring></argsstring>
        <name>_force</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="61" column="26" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9afbe2383713bf83a2cb01cae673c37c" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._invI</definition>
        <argsstring></argsstring>
        <name>_invI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="62" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7588c38817d82d937884ab51f92714f5" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._invMass</definition>
        <argsstring></argsstring>
        <name>_invMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="63" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a75a87b1a4331def1aa27d4aa7f75a5bd" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._sleepTime</definition>
        <argsstring></argsstring>
        <name>_sleepTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="64" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a604ceb49e869426ec39b2b1f4dd0cb67" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_sweep" kindref="compound">Sweep</ref></type>
        <definition>Sweep tainicom.Aether.Physics2D.Dynamics.Body._sweep</definition>
        <argsstring></argsstring>
        <name>_sweep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="65" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab7ea94e3467bcdf5e5461e40ff51794b" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body._torque</definition>
        <argsstring></argsstring>
        <name>_torque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="66" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a70ec475c1b8ed70b5b2710e9118a1d6f" prot="package" static="no" mutable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world" kindref="compound">World</ref></type>
        <definition>World tainicom.Aether.Physics2D.Dynamics.Body._world</definition>
        <argsstring></argsstring>
        <name>_world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="67" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2d435c200937cc351788973288861726" prot="package" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform tainicom.Aether.Physics2D.Dynamics.Body._xf</definition>
        <argsstring></argsstring>
        <name>_xf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="68" column="28" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1afcc4ace8bf0b251af873d63b117480be" prot="package" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body._island</definition>
        <argsstring></argsstring>
        <name>_island</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="69" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2df796ca8e4a117177a94ea5e236d037" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Dynamics.Body._lock</definition>
        <argsstring></argsstring>
        <name>_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="70" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a668294ec9fb1aad5dc5deca5ccf8635a" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Dynamics.Body._lockOrder</definition>
        <argsstring></argsstring>
        <name>_lockOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="71" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a84ea6873bd4114d104eea5d6acd47a03" prot="package" static="no" mutable="no">
        <type>OnCollisionEventHandler</type>
        <definition>OnCollisionEventHandler tainicom.Aether.Physics2D.Dynamics.Body.onCollisionEventHandler</definition>
        <argsstring></argsstring>
        <name>onCollisionEventHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1182" column="42" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a1b6cd5256d6200b4f69e5cec6ca50983" prot="package" static="no" mutable="no">
        <type>OnSeparationEventHandler</type>
        <definition>OnSeparationEventHandler tainicom.Aether.Physics2D.Dynamics.Body.onSeparationEventHandler</definition>
        <argsstring></argsstring>
        <name>onSeparationEventHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1189" column="43" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2ca6c40830a81cac544988f7fbd7af93" prot="public" static="no" mutable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_physics_logic_1_1_controller_filter" kindref="compound">ControllerFilter</ref></type>
        <definition>ControllerFilter tainicom.Aether.Physics2D.Dynamics.Body.ControllerFilter</definition>
        <argsstring></argsstring>
        <name>ControllerFilter</name>
        <initializer>= new <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_physics_logic_1_1_controller_filter" kindref="compound">ControllerFilter</ref>(ControllerCategory.All)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="73" column="33" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abcedb555841f4a4cba87fe82af1d63c1" prot="public" static="no" mutable="no">
        <type>object</type>
        <definition>object tainicom.Aether.Physics2D.Dynamics.Body.Tag</definition>
        <argsstring></argsstring>
        <name>Tag</name>
        <briefdescription>
<para>Set the user data. Use this to store your application specific data. </para>
        </briefdescription>
        <detaileddescription>
<para>The user data.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="100" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abdf2baf7520e45fe9c30e19ad1831f1c" prot="public" static="no" mutable="no">
        <type>readonly <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_collection" kindref="compound">FixtureCollection</ref></type>
        <definition>readonly FixtureCollection tainicom.Aether.Physics2D.Dynamics.Body.FixtureList</definition>
        <argsstring></argsstring>
        <name>FixtureList</name>
        <briefdescription>
<para>Gets all the fixtures attached to this body. </para>
        </briefdescription>
        <detaileddescription>
<para>The fixture list.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="416" column="43" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="416" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7312a101e2d99af44a5ebafbf791f9d3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world" kindref="compound">World</ref></type>
        <definition>World tainicom.Aether.Physics2D.Dynamics.Body.World</definition>
        <argsstring></argsstring>
        <name>World</name>
        <briefdescription>
<para>Get the parent <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world" kindref="compound">World</ref> of this body. This is null if the body is not attached. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="90" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a92b174dc952870285c014e571687af73" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Dynamics.Body.IslandIndex</definition>
        <argsstring></argsstring>
        <name>IslandIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="94" column="20" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab7728cea6929d173a9d70f96f3bb1390" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.Revolutions</definition>
        <argsstring></argsstring>
        <name>Revolutions</name>
        <briefdescription>
<para>Gets the total number revolutions the body has made. </para>
        </briefdescription>
        <detaileddescription>
<para>The revolutions.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="106" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7a2a222f98ae51c82cbaf1e568de61b8" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1a6e7d1615336b3770adf0713570b7dc09" kindref="member">BodyType</ref></type>
        <definition>BodyType tainicom.Aether.Physics2D.Dynamics.Body.BodyType</definition>
        <argsstring></argsstring>
        <name>BodyType</name>
        <briefdescription>
<para>Gets or sets the body type. Warning: This property is readonly during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>The type of body.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="117" column="25" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="118" bodyend="164"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a60e9e70703f85bf65ed70365d6ce31bb" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.LinearVelocity</definition>
        <argsstring></argsstring>
        <name>LinearVelocity</name>
        <briefdescription>
<para>Get or sets the linear velocity of the center of mass. </para>
        </briefdescription>
        <detaileddescription>
<para>The linear velocity.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="170" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="171" bodyend="185"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd79c12c8e29046b3fdc2725b12fd65a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.AngularVelocity</definition>
        <argsstring></argsstring>
        <name>AngularVelocity</name>
        <briefdescription>
<para>Gets or sets the angular velocity. Radians/second. </para>
        </briefdescription>
        <detaileddescription>
<para>The angular velocity.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="191" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="192" bodyend="206"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8cf7c59dfcf64b64957d9495c201d169" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.LinearDamping</definition>
        <argsstring></argsstring>
        <name>LinearDamping</name>
        <briefdescription>
<para>Gets or sets the linear damping. </para>
        </briefdescription>
        <detaileddescription>
<para>The linear damping.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="212" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="213" bodyend="221"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abc81a964830252e9f600d642902fa1fd" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.AngularDamping</definition>
        <argsstring></argsstring>
        <name>AngularDamping</name>
        <briefdescription>
<para>Gets or sets the angular damping. </para>
        </briefdescription>
        <detaileddescription>
<para>The angular damping.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="227" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="228" bodyend="236"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a768df0ad6b6296373e242179b3073a86" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.IsBullet</definition>
        <argsstring></argsstring>
        <name>IsBullet</name>
        <briefdescription>
<para>Gets or sets a value indicating whether this body should be included in the CCD solver. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if this instance is included in CCD; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="242" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6330f4fad3aff81ab4d3463afce91952" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.SleepingAllowed</definition>
        <argsstring></argsstring>
        <name>SleepingAllowed</name>
        <briefdescription>
<para>You can disable sleeping on this body. If you disable sleeping, the body will be woken. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if sleeping is allowed; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="249" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="250" bodyend="259"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6d582726479e1592e7a4e7f5d76cba96" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.Awake</definition>
        <argsstring></argsstring>
        <name>Awake</name>
        <briefdescription>
<para>Set the sleep state of the body. A sleeping body has very low CPU cost. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if awake; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="266" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="267" bodyend="305"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa7dd32fbde8430cd1602b3490b511746" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.Enabled</definition>
        <argsstring></argsstring>
        <name>Enabled</name>
        <briefdescription>
<para>Set the active state of the body. An inactive body is not simulated and cannot be collided with or woken up. If you pass a flag of true, all fixtures will be added to the broad-phase. If you pass a flag of false, all fixtures will be removed from the broad-phase and all contacts will be destroyed. Fixtures and joints are otherwise unaffected. You may continue to create/destroy fixtures and joints on inactive bodies. Fixtures on an inactive body are implicitly inactive and will not participate in collisions, ray-casts, or queries. <ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_joints" kindref="compound">Joints</ref> connected to an inactive body are implicitly inactive. An inactive body is still owned by a b2World object and remains in the body list. Warning: This property is readonly during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if active; otherwise, <computeroutput>false</computeroutput>.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="325" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="326" bodyend="354"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a43bad41bb176044d8a685309c8657f71" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.FixedRotation</definition>
        <argsstring></argsstring>
        <name>FixedRotation</name>
        <briefdescription>
<para>Set this body to have fixed rotation. This causes the mass to be reset. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if it has fixed rotation; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="397" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="398" bodyend="410"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a00a2427be4924b379441a5ebd6c1b8e4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_joints_1_1_joint_edge" kindref="compound">JointEdge</ref></type>
        <definition>JointEdge tainicom.Aether.Physics2D.Dynamics.Body.JointList</definition>
        <argsstring></argsstring>
        <name>JointList</name>
        <briefdescription>
<para>Get the list of all joints attached to this body. </para>
        </briefdescription>
        <detaileddescription>
<para>The joint list.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="422" column="26" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd682a4e6aeccc4801dab083dbbf2c56" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts_1_1_contact_edge" kindref="compound">ContactEdge</ref></type>
        <definition>ContactEdge tainicom.Aether.Physics2D.Dynamics.Body.ContactList</definition>
        <argsstring></argsstring>
        <name>ContactList</name>
        <briefdescription>
<para>Get the list of all contacts attached to this body. Warning: this list changes during the time step and you may miss some collisions if you don&apos;t use callback events. </para>
        </briefdescription>
        <detaileddescription>
<para>The contact list.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="430" column="28" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae1a1ca7971799caed0bc8c6e43833c20" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.Position</definition>
        <argsstring></argsstring>
        <name>Position</name>
        <briefdescription>
<para>Get the world body origin position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return the world position of the body&apos;s origin.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="436" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="437" bodyend="448"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a082b27980f52180dc8c460dd782dd63e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.Rotation</definition>
        <argsstring></argsstring>
        <name>Rotation</name>
        <briefdescription>
<para>Get the angle in radians. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return the current world rotation angle in radians.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="454" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="455" bodyend="466"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a132e20c3f8bf6201f5cb0c3b0483ec19" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.IgnoreGravity</definition>
        <argsstring></argsstring>
        <name>IgnoreGravity</name>
        <briefdescription>
<para>Gets or sets a value indicating whether this body ignores gravity. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if it ignores gravity; otherwise, <computeroutput>false</computeroutput>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="472" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="472" bodyend="472"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3d5e2f7fce6290b281f6c65f89e21305" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.WorldCenter</definition>
        <argsstring></argsstring>
        <name>WorldCenter</name>
        <briefdescription>
<para>Get the world position of the center of mass. </para>
        </briefdescription>
        <detaileddescription>
<para>The world position.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="478" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ada02e67a7df0a19a93dfc19ddcd408fd" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.LocalCenter</definition>
        <argsstring></argsstring>
        <name>LocalCenter</name>
        <briefdescription>
<para>Get the local position of the center of mass. Warning: This property is readonly during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>The local position.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="489" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="490" bodyend="509"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a4880da2f5b13b43f82ae54453f0469da" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.Mass</definition>
        <argsstring></argsstring>
        <name>Mass</name>
        <briefdescription>
<para>Gets or sets the mass. Usually in kilograms (kg). Warning: This property is readonly during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>The mass.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="517" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="518" bodyend="537"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a283ad81bc9920b668cb1ac11ca91c20f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Dynamics.Body.Inertia</definition>
        <argsstring></argsstring>
        <name>Inertia</name>
        <briefdescription>
<para>Get or set the rotational inertia of the body about the local origin. usually in kg-m^2. Warning: This property is readonly during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>The inertia.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="545" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="546" bodyend="565"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aeb12d81d9d5bb97b895d3ba6e0d1516e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.IgnoreCCD</definition>
        <argsstring></argsstring>
        <name>IgnoreCCD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="567" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="567" bodyend="567"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a47c47876d1343ce7244b3c798bc98519" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>OnCollisionEventHandler</type>
        <definition>OnCollisionEventHandler tainicom.Aether.Physics2D.Dynamics.Body.OnCollision</definition>
        <argsstring></argsstring>
        <name>OnCollision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1183" column="46" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1184" bodyend="1187"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af71d79734a7d8ddb32c03a38fe63424c" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>OnSeparationEventHandler</type>
        <definition>OnSeparationEventHandler tainicom.Aether.Physics2D.Dynamics.Body.OnSeparation</definition>
        <argsstring></argsstring>
        <name>OnSeparation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1190" column="47" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1191" bodyend="1194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a22f721093cde50f0d10898089296f2ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Dynamics.Body.Body</definition>
        <argsstring>()</argsstring>
        <name>Body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="75" column="16" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2f23e37046794a8fc22c8ecbd55f8dc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ResetDynamics</definition>
        <argsstring>()</argsstring>
        <name>ResetDynamics</name>
        <briefdescription>
<para>Resets the dynamics of this body. Sets torque, force and linear/angular velocity to 0 </para>
        </briefdescription>
        <detaileddescription>
<para>summary&gt; Warning: This method is locked during callbacks.</para>
<para>&gt; <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="573" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1afa20d22cbabdc80cb52a36f3cce3247e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.Add</definition>
        <argsstring>(Fixture fixture)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
          <declname>fixture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="585" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="585" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a28672ed13377a235dde091f31d52a278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tainicom.Aether.Physics2D.Dynamics.Body.Remove</definition>
        <argsstring>(Fixture fixture)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
          <declname>fixture</declname>
        </param>
        <briefdescription>
<para>Destroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture. This will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density. All fixtures attached to a body are implicitly destroyed when the body is destroyed. Warning: This method is locked during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fixture</parametername>
</parameternamelist>
<parameterdescription>
<para>The fixture to be removed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="639" column="29" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="639" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7dda2d3e97d5b80c820141a1ba21427f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetTransform</definition>
        <argsstring>(ref Vector2 position, float rotation)</argsstring>
        <name>SetTransform</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Set the position of the body&apos;s origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body&apos;s transform may cause non-physical behavior. Warning: This method is locked during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the body&apos;s local origin.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The world rotation in radians.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="696" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="696" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3137aa6d5a0eb6794395aa0e74913dc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetTransform</definition>
        <argsstring>(Vector2 position, float rotation)</argsstring>
        <name>SetTransform</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Set the position of the body&apos;s origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body&apos;s transform may cause non-physical behavior. Warning: This method is locked during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the body&apos;s local origin.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The world rotation in radians.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="712" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="712" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ad2c1314d4e2d5864393937f931021ae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetTransformIgnoreContacts</definition>
        <argsstring>(ref Vector2 position, float angle)</argsstring>
        <name>SetTransformIgnoreContacts</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>For teleporting a body without considering new contacts immediately. Warning: This method is locked during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System.InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the world is Locked/Stepping.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="724" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="724" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a287bde6984f250f06be20aed7eab009b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform tainicom.Aether.Physics2D.Dynamics.Body.GetTransform</definition>
        <argsstring>()</argsstring>
        <name>GetTransform</name>
        <briefdescription>
<para>Get the body transform for the body&apos;s origin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the body&apos;s origin.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="748" column="26" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="748" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a40fe2a2c8d6585d994e494cd6b8b19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.GetTransform</definition>
        <argsstring>(out Transform transform)</argsstring>
        <name>GetTransform</name>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform" kindref="compound">Transform</ref></type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Get the body transform for the body&apos;s origin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the body&apos;s origin.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="757" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a868085f2ac93ec1f7a9c1268c7b662a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyForce</definition>
        <argsstring>(Vector2 force, Vector2 point)</argsstring>
        <name>ApplyForce</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>force</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The world force vector, usually in Newtons (N).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the point of application.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="769" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="769" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9a8268d780dfde412e08144438216563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyForce</definition>
        <argsstring>(ref Vector2 force)</argsstring>
        <name>ApplyForce</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Applies a force at the center of mass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The force.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="778" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="778" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a31a8dec08bf6c5c6c5fa145cfaa3250a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyForce</definition>
        <argsstring>(Vector2 force)</argsstring>
        <name>ApplyForce</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Applies a force at the center of mass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The force.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="787" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a72011177406f5a358d9197d76e262f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyForce</definition>
        <argsstring>(ref Vector2 force, ref Vector2 point)</argsstring>
        <name>ApplyForce</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>force</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The world force vector, usually in Newtons (N).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the point of application.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="799" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="799" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a95362852d97780abbd4462d632beb5eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyTorque</definition>
        <argsstring>(float torque)</argsstring>
        <name>ApplyTorque</name>
        <param>
          <type>float</type>
          <declname>torque</declname>
        </param>
        <briefdescription>
<para>Apply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>The torque about the z-axis (out of the screen), usually in N-m.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="822" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="822" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8fd304255abe689d3af59f5b12f5a06b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyLinearImpulse</definition>
        <argsstring>(Vector2 impulse)</argsstring>
        <name>ApplyLinearImpulse</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
<para>Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impulse</parametername>
</parameternamelist>
<parameterdescription>
<para>The world impulse vector, usually in N-seconds or kg-m/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="840" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="840" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ace8c6731829d2e136f9c2b67a456ad14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyLinearImpulse</definition>
        <argsstring>(Vector2 impulse, Vector2 point)</argsstring>
        <name>ApplyLinearImpulse</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>impulse</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impulse</parametername>
</parameternamelist>
<parameterdescription>
<para>The world impulse vector, usually in N-seconds or kg-m/s.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the point of application.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="853" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8ee79f69bee7be3a0d4d6c3b2435cc2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyLinearImpulse</definition>
        <argsstring>(ref Vector2 impulse)</argsstring>
        <name>ApplyLinearImpulse</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
<para>Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impulse</parametername>
</parameternamelist>
<parameterdescription>
<para>The world impulse vector, usually in N-seconds or kg-m/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="863" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="863" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a0d21ca6fd7286a096956b37703da1c5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyLinearImpulse</definition>
        <argsstring>(ref Vector2 impulse, ref Vector2 point)</argsstring>
        <name>ApplyLinearImpulse</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>impulse</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impulse</parametername>
</parameternamelist>
<parameterdescription>
<para>The world impulse vector, usually in N-seconds or kg-m/s.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The world position of the point of application.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="884" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="884" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7809c94da515d04bc25b1749b469f355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ApplyAngularImpulse</definition>
        <argsstring>(float impulse)</argsstring>
        <name>ApplyAngularImpulse</name>
        <param>
          <type>float</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
<para>Apply an angular impulse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>impulse</parametername>
</parameternamelist>
<parameterdescription>
<para>The angular impulse in units of kg*m*m/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="900" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="900" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a128b250c5d9955b652cce8bca815b29e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.ResetMassData</definition>
        <argsstring>()</argsstring>
        <name>ResetMassData</name>
        <briefdescription>
<para>This resets the mass properties to the sum of the mass properties of the fixtures. This normally does not need to be called unless you called SetMassData to override the mass and you later want to reset the mass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="920" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="920" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a732b05e14a745e9bd2703a334f5b430d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetWorldPoint</definition>
        <argsstring>(ref Vector2 localPoint)</argsstring>
        <name>GetWorldPoint</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localPoint</declname>
        </param>
        <briefdescription>
<para>Get the world coordinates of a point given the local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point on the body measured relative the the body&apos;s origin.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same point expressed in world coordinates.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1004" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1004" bodyend="1007"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a10bbe1cd7fbc87f9eda59aa40f7de9a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetWorldPoint</definition>
        <argsstring>(Vector2 localPoint)</argsstring>
        <name>GetWorldPoint</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localPoint</declname>
        </param>
        <briefdescription>
<para>Get the world coordinates of a point given the local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point on the body measured relative the the body&apos;s origin.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same point expressed in world coordinates.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1014" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1014" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a68751617d19d87bee4e443e73715e8a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetWorldVector</definition>
        <argsstring>(ref Vector2 localVector)</argsstring>
        <name>GetWorldVector</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localVector</declname>
        </param>
        <briefdescription>
<para>Get the world coordinates of a vector given the local coordinates. Note that the vector only takes the rotation into account, not the position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localVector</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector fixed in the body.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same vector expressed in world coordinates.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1025" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1025" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae7009ddc4947279d3e58d07eb0275416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetWorldVector</definition>
        <argsstring>(Vector2 localVector)</argsstring>
        <name>GetWorldVector</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localVector</declname>
        </param>
        <briefdescription>
<para>Get the world coordinates of a vector given the local coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localVector</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector fixed in the body.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same vector expressed in world coordinates.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1035" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1035" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8c87ec9361e9a2ea2bcbda36fe0e24a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLocalPoint</definition>
        <argsstring>(ref Vector2 worldPoint)</argsstring>
        <name>GetLocalPoint</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldPoint</declname>
        </param>
        <briefdescription>
<para>Gets a local point relative to the body&apos;s origin given a world point. Note that the vector only takes the rotation into account, not the position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding local point relative to the body&apos;s origin.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1046" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1046" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd9b6921b008d9ee9e9c1f95ec2d7a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLocalPoint</definition>
        <argsstring>(Vector2 worldPoint)</argsstring>
        <name>GetLocalPoint</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldPoint</declname>
        </param>
        <briefdescription>
<para>Gets a local point relative to the body&apos;s origin given a world point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding local point relative to the body&apos;s origin.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1056" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1056" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a0021dc13017c2d56ea09f812c4706cff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLocalVector</definition>
        <argsstring>(ref Vector2 worldVector)</argsstring>
        <name>GetLocalVector</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldVector</declname>
        </param>
        <briefdescription>
<para>Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldVector</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding local vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1067" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1067" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abb1bf709518054b1254e6818afcdb34c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLocalVector</definition>
        <argsstring>(Vector2 worldVector)</argsstring>
        <name>GetLocalVector</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldVector</declname>
        </param>
        <briefdescription>
<para>Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldVector</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding local vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1078" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1078" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa7b43d4cc56a4f6e8b7163b44fb2fba3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLinearVelocityFromWorldPoint</definition>
        <argsstring>(Vector2 worldPoint)</argsstring>
        <name>GetLinearVelocityFromWorldPoint</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldPoint</declname>
        </param>
        <briefdescription>
<para>Get the world linear velocity of a world point attached to this body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The world velocity of a point.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1088" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1088" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a4edb17f0c53b969e729f1a38655e6029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLinearVelocityFromWorldPoint</definition>
        <argsstring>(ref Vector2 worldPoint)</argsstring>
        <name>GetLinearVelocityFromWorldPoint</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>worldPoint</declname>
        </param>
        <briefdescription>
<para>Get the world linear velocity of a world point attached to this body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in world coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The world velocity of a point.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1098" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1098" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9686cebc9a2791f1eb2bac20d1899d71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLinearVelocityFromLocalPoint</definition>
        <argsstring>(Vector2 localPoint)</argsstring>
        <name>GetLinearVelocityFromLocalPoint</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localPoint</declname>
        </param>
        <briefdescription>
<para>Get the world velocity of a local point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in local coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The world velocity of a point.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1110" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1110" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a658c4ab25e6ff9492169cc3cc56de518" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tainicom.Aether.Physics2D.Dynamics.Body.GetLinearVelocityFromLocalPoint</definition>
        <argsstring>(ref Vector2 localPoint)</argsstring>
        <name>GetLinearVelocityFromLocalPoint</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>localPoint</declname>
        </param>
        <briefdescription>
<para>Get the world velocity of a local point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point in local coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The world velocity of a point.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1120" column="24" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1120" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3ff85ea437557ebf4954c519263bd280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetRestitution</definition>
        <argsstring>(float restitution)</argsstring>
        <name>SetRestitution</name>
        <param>
          <type>float</type>
          <declname>restitution</declname>
        </param>
        <briefdescription>
<para>Set restitution on all fixtures. Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>restitution</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1204" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1204" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a57d552d0212ee0fd4a0bd3c5028437a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetFriction</definition>
        <argsstring>(float friction)</argsstring>
        <name>SetFriction</name>
        <param>
          <type>float</type>
          <declname>friction</declname>
        </param>
        <briefdescription>
<para>Set friction on all fixtures. Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>friction</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1217" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1217" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae2254d5dde5ba83e2362b5075c23c01b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetCollisionCategories</definition>
        <argsstring>(Category category)</argsstring>
        <name>SetCollisionCategories</name>
        <param>
          <type>Category</type>
          <declname>category</declname>
        </param>
        <briefdescription>
<para>Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1228" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1228" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2f2160cf6950d9ea91ba37c4d0bc7d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetCollidesWith</definition>
        <argsstring>(Category category)</argsstring>
        <name>SetCollidesWith</name>
        <param>
          <type>Category</type>
          <declname>category</declname>
        </param>
        <briefdescription>
<para>Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1239" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1239" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ac4c3687eafdd215e6fd73be07e414d77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetCollisionGroup</definition>
        <argsstring>(short collisionGroup)</argsstring>
        <name>SetCollisionGroup</name>
        <param>
          <type>short</type>
          <declname>collisionGroup</declname>
        </param>
        <briefdescription>
<para>Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1250" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1250" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7a04d84d160992c32b4b60585dd7c44a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SetIsSensor</definition>
        <argsstring>(bool isSensor)</argsstring>
        <name>SetIsSensor</name>
        <param>
          <type>bool</type>
          <declname>isSensor</declname>
        </param>
        <briefdescription>
<para>Warning: This method applies the value on existing Fixtures. It&apos;s not a property of <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Deprecated in version 1.6</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1261" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1261" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab97f6ba23ebb0457061f77a6ac514610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
        <definition>Body tainicom.Aether.Physics2D.Dynamics.Body.Clone</definition>
        <argsstring>(World world=null)</argsstring>
        <name>Clone</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world" kindref="compound">World</ref></type>
          <declname>world</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Makes a clone of the body. Fixtures and therefore shapes are not included. Use <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7819567787df47d0a1a224326ce32d9a" kindref="member">DeepClone()</ref> to clone the body, as well as fixtures and shapes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1273" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1273" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7819567787df47d0a1a224326ce32d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
        <definition>Body tainicom.Aether.Physics2D.Dynamics.Body.DeepClone</definition>
        <argsstring>(World world=null)</argsstring>
        <name>DeepClone</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world" kindref="compound">World</ref></type>
          <declname>world</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Clones the body and all attached fixtures and shapes. Simply said, it makes a complete copy of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1300" column="21" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1300" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a625d8c9d3d12f2df0920d69e25e3a70b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>virtual Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateFixture</definition>
        <argsstring>(Shape shape)</argsstring>
        <name>CreateFixture</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_shapes_1_1_shape" kindref="compound">Shape</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Creates a fixture and attach it to this body. If the density is non-zero, this function automatically updates the mass of the body. <ref refid="namespacetainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts" kindref="compound">Contacts</ref> are not created until the next time step. Warning: This method is locked during callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>The shape.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="30" column="32" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ad31d42e916814a8fbabd7606842c03f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateEdge</definition>
        <argsstring>(Vector2 start, Vector2 end)</argsstring>
        <name>CreateEdge</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="37" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2038a4d3f3f8c7353949e9e34a0cc3b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateChainShape</definition>
        <argsstring>(Vertices vertices)</argsstring>
        <name>CreateChainShape</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vertices" kindref="compound">Vertices</ref></type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="43" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a68d858fa09ca8967842de7565ec50800" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateLoopShape</definition>
        <argsstring>(Vertices vertices)</argsstring>
        <name>CreateLoopShape</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vertices" kindref="compound">Vertices</ref></type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="49" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a30ec194cc4c126b8901844a1afb47dc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateRectangle</definition>
        <argsstring>(float width, float height, float density, Vector2 offset)</argsstring>
        <name>CreateRectangle</name>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="55" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a525ac5f811f599855adb16672148063b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateCircle</definition>
        <argsstring>(float radius, float density)</argsstring>
        <name>CreateCircle</name>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="63" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a89634884dcb20fc05273f964118bdbf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateCircle</definition>
        <argsstring>(float radius, float density, Vector2 offset)</argsstring>
        <name>CreateCircle</name>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="72" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a516112262d0c98d45179b323500d7cef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreatePolygon</definition>
        <argsstring>(Vertices vertices, float density)</argsstring>
        <name>CreatePolygon</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vertices" kindref="compound">Vertices</ref></type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="82" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a71ff650e8a247de45f8d6efbbef516ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateEllipse</definition>
        <argsstring>(float xRadius, float yRadius, int edges, float density)</argsstring>
        <name>CreateEllipse</name>
        <param>
          <type>float</type>
          <declname>xRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>yRadius</declname>
        </param>
        <param>
          <type>int</type>
          <declname>edges</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="91" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="91" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa630665a722ede7ba2fe73bde1e57032" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref> &gt;</type>
        <definition>List&lt;Fixture&gt; tainicom.Aether.Physics2D.Dynamics.Body.CreateCompoundPolygon</definition>
        <argsstring>(List&lt; Vertices &gt; list, float density)</argsstring>
        <name>CreateCompoundPolygon</name>
        <param>
          <type>List&lt; <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vertices" kindref="compound">Vertices</ref> &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="104" column="21" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="104" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aea4300ec1715b951932051e0b87b0a45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref></type>
        <definition>Fixture tainicom.Aether.Physics2D.Dynamics.Body.CreateLineArc</definition>
        <argsstring>(float radians, int sides, float radius, bool closed)</argsstring>
        <name>CreateLineArc</name>
        <param>
          <type>float</type>
          <declname>radians</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sides</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>closed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="126" column="24" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="126" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af8af413ff0c4d2638266a0c6dcf55056" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture" kindref="compound">Fixture</ref> &gt;</type>
        <definition>List&lt;Fixture&gt; tainicom.Aether.Physics2D.Dynamics.Body.CreateSolidArc</definition>
        <argsstring>(float density, float radians, int sides, float radius)</argsstring>
        <name>CreateSolidArc</name>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radians</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sides</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.Factory.cs" line="133" column="21" bodyfile="Physics2D/Dynamics/Body.Factory.cs" bodystart="133" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6cf920a7732e25c989704deeaa4b0c4e" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.CreateProxies</definition>
        <argsstring>()</argsstring>
        <name>CreateProxies</name>
        <briefdescription>
<para>Create all proxies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="359" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="359" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8b5ed157e2cd253ff7151bae63070e57" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.DestroyProxies</definition>
        <argsstring>()</argsstring>
        <name>DestroyProxies</name>
        <briefdescription>
<para>Destroy all proxies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="369" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aef1b685ec6c31ce7b155dfe01fd8064d" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SynchronizeFixtures</definition>
        <argsstring>()</argsstring>
        <name>SynchronizeFixtures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1125" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1125" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a0cf90726756fdc4e246827bf9e8563" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.SynchronizeTransform</definition>
        <argsstring>()</argsstring>
        <name>SynchronizeTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1137" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1137" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa2834b01ca1a5188321e0cf70fc02173" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Dynamics.Body.ShouldCollide</definition>
        <argsstring>(Body other)</argsstring>
        <name>ShouldCollide</name>
        <param>
          <type><ref refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body" kindref="compound">Body</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>This is used to prevent connected bodies from colliding. It may lie, depending on the collideConnected flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other body.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1149" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1149" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aed5431ab22d532cc8bbd9377a8f384ad" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.Advance</definition>
        <argsstring>(float alpha)</argsstring>
        <name>Advance</name>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="1172" column="23" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="1172" bodyend="1180"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9cccc0468e90b53fb283a2d247e6fa5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Dynamics.Body.DestroyContacts</definition>
        <argsstring>()</argsstring>
        <name>DestroyContacts</name>
        <briefdescription>
<para>Destroy the attached contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Dynamics/Body.cs" line="379" column="22" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="379" bodyend="389"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>tainicom.Aether.Physics2D.Common.Transform</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_transform"/>
        <childnode refid="3" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>IEnumerable&lt; Joint &gt;</label>
      </node>
      <node id="7">
        <label>ICollection&lt; Fixture &gt;</label>
      </node>
      <node id="24">
        <label>tainicom.Aether.Physics2D.Dynamics.ControllerCollection</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_controller_collection"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>tainicom.Aether.Physics2D.Dynamics.World</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_world"/>
        <childnode refid="12" relation="usage">
          <edgelabel>JointList</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>ContactManager</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>ControllerList</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>BodyList</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>ICollection&lt; Controller &gt;</label>
      </node>
      <node id="19">
        <label>tainicom.Aether.Physics2D.Collision.Manifold</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_manifold"/>
        <childnode refid="20" relation="usage">
          <edgelabel>Points</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>LocalNormal</edgelabel>
          <edgelabel>LocalPoint</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>tainicom.Aether.Physics2D.Common.FixedArray2&lt; tainicom.Aether.Physics2D.Collision.ManifoldPoint &gt;</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_fixed_array2"/>
      </node>
      <node id="28">
        <label>tainicom.Aether.Physics2D.Dynamics.BodyCollection</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_collection"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>IList&lt; Fixture &gt;</label>
      </node>
      <node id="25">
        <label>IEnumerable&lt; Controller &gt;</label>
      </node>
      <node id="17">
        <label>tainicom.Aether.Physics2D.Dynamics.Contacts.ContactListHead</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts_1_1_contact_list_head"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tainicom.Aether.Physics2D.Common.Sweep</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_sweep"/>
        <childnode refid="3" relation="usage">
          <edgelabel>C</edgelabel>
          <edgelabel>C0</edgelabel>
          <edgelabel>LocalCenter</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>IEnumerable&lt; Body &gt;</label>
      </node>
      <node id="5">
        <label>tainicom.Aether.Physics2D.Dynamics.FixtureCollection</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_fixture_collection"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>IList&lt; Controller &gt;</label>
      </node>
      <node id="18">
        <label>Contact</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts_1_1_contact"/>
        <childnode refid="19" relation="usage">
          <edgelabel>Manifold</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>_nodeA</edgelabel>
          <edgelabel>_nodeB</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>IList&lt; Body &gt;</label>
      </node>
      <node id="15">
        <label>IList&lt; Joint &gt;</label>
      </node>
      <node id="21">
        <label>tainicom.Aether.Physics2D.Dynamics.Contacts.ContactEdge</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contacts_1_1_contact_edge"/>
      </node>
      <node id="10">
        <label>tainicom.Aether.Physics2D.Common.Complex</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_complex"/>
      </node>
      <node id="22">
        <label>IEnumerable&lt; Contact &gt;</label>
      </node>
      <node id="6">
        <label>IEnumerable&lt; Fixture &gt;</label>
      </node>
      <node id="12">
        <label>tainicom.Aether.Physics2D.Dynamics.JointCollection</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_joint_collection"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>ICollection&lt; Joint &gt;</label>
      </node>
      <node id="1">
        <label>tainicom.Aether.Physics2D.Dynamics.Body</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_sweep</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>FixtureList</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_force</edgelabel>
          <edgelabel>_linearVelocity</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>_xf</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>_world</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tainicom.Aether.Physics2D.Common.Vector2</label>
        <link refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>ICollection&lt; Body &gt;</label>
      </node>
      <node id="23">
        <label>tainicom.Aether.Physics2D.Collision.IBroadPhase</label>
        <link refid="interfacetainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_i_broad_phase"/>
      </node>
      <node id="4">
        <label>IEquatable&lt; Vector2 &gt;</label>
      </node>
      <node id="16">
        <label>tainicom.Aether.Physics2D.Dynamics.ContactManager</label>
        <link refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_contact_manager"/>
        <childnode refid="17" relation="usage">
          <edgelabel>ContactList</edgelabel>
          <edgelabel>_contactPoolList</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>BroadPhase</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Physics2D/Dynamics/Body.cs" line="47" column="19" bodyfile="Physics2D/Dynamics/Body.cs" bodystart="48" bodyend="1312"/>
    <listofallmembers>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2d88ec22b12c0d10f4c8ac70c19ae213" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_angularDamping</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a516bebe571f915945c914e11badbb087" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_angularVelocity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ac9865183ca8e0e1a6e1f40ca09099866" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_awake</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a44a44d62a34ea68912b2770dcc9b38e3" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_bodyType</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af922f78083b3d7ba44a7229cd210efd0" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_enabled</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aae6d1d9817bf272a68dc5aed9f653ac9" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_fixedRotation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a92fa86f230f5c62564707f4ee228bb" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_force</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab3fdcdf39130472bc41ee587da498859" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_inertia</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9afbe2383713bf83a2cb01cae673c37c" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_invI</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7588c38817d82d937884ab51f92714f5" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_invMass</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1afcc4ace8bf0b251af873d63b117480be" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_island</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a83799ad4519b1ece02182472eeed9763" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_linearDamping</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a353e51031ae295d1c51c659a737b4730" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_linearVelocity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2df796ca8e4a117177a94ea5e236d037" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_lock</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a668294ec9fb1aad5dc5deca5ccf8635a" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_lockOrder</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae7ca5026a8568188e49a945b214fcace" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_mass</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a76089d593753e1c801ec075cc5e6afd6" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_sleepingAllowed</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a75a87b1a4331def1aa27d4aa7f75a5bd" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_sleepTime</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a604ceb49e869426ec39b2b1f4dd0cb67" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_sweep</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab7ea94e3467bcdf5e5461e40ff51794b" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_torque</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a70ec475c1b8ed70b5b2710e9118a1d6f" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_world</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2d435c200937cc351788973288861726" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>_xf</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1afa20d22cbabdc80cb52a36f3cce3247e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Add</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aed5431ab22d532cc8bbd9377a8f384ad" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Advance</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abc81a964830252e9f600d642902fa1fd" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>AngularDamping</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd79c12c8e29046b3fdc2725b12fd65a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>AngularVelocity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7809c94da515d04bc25b1749b469f355" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyAngularImpulse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a868085f2ac93ec1f7a9c1268c7b662a8" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyForce</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9a8268d780dfde412e08144438216563" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyForce</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a31a8dec08bf6c5c6c5fa145cfaa3250a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyForce</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a72011177406f5a358d9197d76e262f28" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyForce</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8fd304255abe689d3af59f5b12f5a06b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyLinearImpulse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ace8c6731829d2e136f9c2b67a456ad14" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyLinearImpulse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8ee79f69bee7be3a0d4d6c3b2435cc2d" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyLinearImpulse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a0d21ca6fd7286a096956b37703da1c5c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyLinearImpulse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a95362852d97780abbd4462d632beb5eb" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ApplyTorque</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6d582726479e1592e7a4e7f5d76cba96" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Awake</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a22f721093cde50f0d10898089296f2ca" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Body</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7a2a222f98ae51c82cbaf1e568de61b8" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>BodyType</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab97f6ba23ebb0457061f77a6ac514610" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Clone</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd682a4e6aeccc4801dab083dbbf2c56" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ContactList</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2ca6c40830a81cac544988f7fbd7af93" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ControllerFilter</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2038a4d3f3f8c7353949e9e34a0cc3b0" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateChainShape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a525ac5f811f599855adb16672148063b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateCircle</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a89634884dcb20fc05273f964118bdbf9" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateCircle</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa630665a722ede7ba2fe73bde1e57032" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateCompoundPolygon</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ad31d42e916814a8fbabd7606842c03f2" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateEdge</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a71ff650e8a247de45f8d6efbbef516ee" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateEllipse</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a625d8c9d3d12f2df0920d69e25e3a70b" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateFixture</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aea4300ec1715b951932051e0b87b0a45" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateLineArc</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a68d858fa09ca8967842de7565ec50800" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateLoopShape</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a516112262d0c98d45179b323500d7cef" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreatePolygon</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6cf920a7732e25c989704deeaa4b0c4e" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateProxies</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a30ec194cc4c126b8901844a1afb47dc4" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateRectangle</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af8af413ff0c4d2638266a0c6dcf55056" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>CreateSolidArc</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7819567787df47d0a1a224326ce32d9a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>DeepClone</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9cccc0468e90b53fb283a2d247e6fa5c" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>DestroyContacts</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8b5ed157e2cd253ff7151bae63070e57" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>DestroyProxies</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa7dd32fbde8430cd1602b3490b511746" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Enabled</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a43bad41bb176044d8a685309c8657f71" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>FixedRotation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abdf2baf7520e45fe9c30e19ad1831f1c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>FixtureList</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a9686cebc9a2791f1eb2bac20d1899d71" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLinearVelocityFromLocalPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a658c4ab25e6ff9492169cc3cc56de518" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLinearVelocityFromLocalPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa7b43d4cc56a4f6e8b7163b44fb2fba3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLinearVelocityFromWorldPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a4edb17f0c53b969e729f1a38655e6029" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLinearVelocityFromWorldPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8c87ec9361e9a2ea2bcbda36fe0e24a5" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLocalPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abd9b6921b008d9ee9e9c1f95ec2d7a20" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLocalPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a0021dc13017c2d56ea09f812c4706cff" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLocalVector</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abb1bf709518054b1254e6818afcdb34c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetLocalVector</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a287bde6984f250f06be20aed7eab009b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetTransform</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a40fe2a2c8d6585d994e494cd6b8b19" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetTransform</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a732b05e14a745e9bd2703a334f5b430d" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetWorldPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a10bbe1cd7fbc87f9eda59aa40f7de9a3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetWorldPoint</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a68751617d19d87bee4e443e73715e8a9" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetWorldVector</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae7009ddc4947279d3e58d07eb0275416" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>GetWorldVector</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aeb12d81d9d5bb97b895d3ba6e0d1516e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>IgnoreCCD</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a132e20c3f8bf6201f5cb0c3b0483ec19" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>IgnoreGravity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a283ad81bc9920b668cb1ac11ca91c20f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Inertia</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a768df0ad6b6296373e242179b3073a86" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>IsBullet</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a92b174dc952870285c014e571687af73" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>IslandIndex</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a00a2427be4924b379441a5ebd6c1b8e4" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>JointList</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a8cf7c59dfcf64b64957d9495c201d169" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>LinearDamping</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a60e9e70703f85bf65ed70365d6ce31bb" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>LinearVelocity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ada02e67a7df0a19a93dfc19ddcd408fd" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>LocalCenter</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a4880da2f5b13b43f82ae54453f0469da" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Mass</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a47c47876d1343ce7244b3c798bc98519" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>OnCollision</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a84ea6873bd4114d104eea5d6acd47a03" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>onCollisionEventHandler</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1af71d79734a7d8ddb32c03a38fe63424c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>OnSeparation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a1b6cd5256d6200b4f69e5cec6ca50983" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>onSeparationEventHandler</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae1a1ca7971799caed0bc8c6e43833c20" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Position</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a28672ed13377a235dde091f31d52a278" prot="public" virt="virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Remove</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2f23e37046794a8fc22c8ecbd55f8dc1" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ResetDynamics</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a128b250c5d9955b652cce8bca815b29e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ResetMassData</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ab7728cea6929d173a9d70f96f3bb1390" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Revolutions</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a082b27980f52180dc8c460dd782dd63e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Rotation</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2f2160cf6950d9ea91ba37c4d0bc7d67" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetCollidesWith</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ae2254d5dde5ba83e2362b5075c23c01b" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetCollisionCategories</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ac4c3687eafdd215e6fd73be07e414d77" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetCollisionGroup</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a57d552d0212ee0fd4a0bd3c5028437a6" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetFriction</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7a04d84d160992c32b4b60585dd7c44a" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetIsSensor</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3ff85ea437557ebf4954c519263bd280" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetRestitution</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7dda2d3e97d5b80c820141a1ba21427f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetTransform</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3137aa6d5a0eb6794395aa0e74913dc1" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetTransform</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1ad2c1314d4e2d5864393937f931021ae2" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SetTransformIgnoreContacts</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aa2834b01ca1a5188321e0cf70fc02173" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>ShouldCollide</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a6330f4fad3aff81ab4d3463afce91952" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SleepingAllowed</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1aef1b685ec6c31ce7b155dfe01fd8064d" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SynchronizeFixtures</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a2a0cf90726756fdc4e246827bf9e8563" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>SynchronizeTransform</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1abcedb555841f4a4cba87fe82af1d63c1" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>Tag</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a7312a101e2d99af44a5ebafbf791f9d3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>World</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_dynamics_1_1_body_1a3d5e2f7fce6290b281f6c65f89e21305" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Dynamics::Body</scope><name>WorldCenter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
