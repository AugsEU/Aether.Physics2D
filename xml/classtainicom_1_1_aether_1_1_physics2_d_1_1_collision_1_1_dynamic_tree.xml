<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree" kind="class" language="C#" prot="public">
    <compoundname>tainicom::Aether::Physics2D::Collision::DynamicTree</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a170be8c96fea632a3fc62c7769380395" prot="private" static="no" mutable="no">
        <type>Stack&lt; int &gt;</type>
        <definition>Stack&lt;int&gt; tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._raycastStack</definition>
        <argsstring></argsstring>
        <name>_raycastStack</name>
        <initializer>= new Stack&lt;int&gt;(256)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="87" column="23" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a4143024fbb4be1971095f47d2fdf340b" prot="private" static="no" mutable="no">
        <type>Stack&lt; int &gt;</type>
        <definition>Stack&lt;int&gt; tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._queryStack</definition>
        <argsstring></argsstring>
        <name>_queryStack</name>
        <initializer>= new Stack&lt;int&gt;(256)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="88" column="23" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a392264c69da341e7bbffb70c555653d9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._freeList</definition>
        <argsstring></argsstring>
        <name>_freeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="89" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ab951266bb53532bd05b313fb86e1e39e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._nodeCapacity</definition>
        <argsstring></argsstring>
        <name>_nodeCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="90" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ae9cfb5cfa022f4ec3fba4a15794467f6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._nodeCount</definition>
        <argsstring></argsstring>
        <name>_nodeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="91" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a00496241f4c9dc2bc46753ec749dbdb6" prot="private" static="no" mutable="no">
        <type>TreeNode&lt; T &gt;[]</type>
        <definition>TreeNode&lt;T&gt; [] tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._nodes</definition>
        <argsstring></argsstring>
        <name>_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="92" column="26" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a8b5b55187279ed5e8dfbbaa42a849a31" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;._root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="93" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a42cc1c62a792fcc3c3b9e3fba4cd7d2b" prot="package" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.NullNode</definition>
        <argsstring></argsstring>
        <name>NullNode</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="94" column="28" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ac5973aefbe658d2fc285fc1fba3e4426" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.Height</definition>
        <argsstring></argsstring>
        <name>Height</name>
        <briefdescription>
<para>Compute the height of the binary tree in O(N) time. Should not be called often. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="122" column="20" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abc970b94d79de90b525e1c06118aeb02" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.AreaRatio</definition>
        <argsstring></argsstring>
        <name>AreaRatio</name>
        <briefdescription>
<para>Get the ratio of the sum of the node areas to the root area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="138" column="22" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="139" bodyend="165"/>
      </memberdef>
      <memberdef kind="property" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a6e68eb87b6fd9f4cddf818d014c5de62" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.MaxBalance</definition>
        <argsstring></argsstring>
        <name>MaxBalance</name>
        <briefdescription>
<para>Get the maximum balance of an node in the tree. The balance is the difference in height of the two children of a node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="171" column="20" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="172" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1af7b0eabf058ebd2551617d6a4a85686e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.DynamicTree</definition>
        <argsstring>()</argsstring>
        <name>DynamicTree</name>
        <briefdescription>
<para>Constructing the tree initializes the node pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="99" column="16" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="99" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a6b9fdf6dae436c1f9d4089f62b4bccf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.AddProxy</definition>
        <argsstring>(ref AABB aabb)</argsstring>
        <name>AddProxy</name>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
<para>Create a proxy in the tree as a leaf node. We return the index of the node instead of a pointer so that we can grow the node pool. <linebreak/>
 /// </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index of the created proxy</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="204" column="20" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a2bec2185e5b0d157067c370f7f51323c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.RemoveProxy</definition>
        <argsstring>(int proxyId)</argsstring>
        <name>RemoveProxy</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Destroy a proxy. This asserts if the id is invalid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="223" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1addf172ec5c146b53876d3b1c46136182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.MoveProxy</definition>
        <argsstring>(int proxyId, ref AABB aabb, Vector2 displacement)</argsstring>
        <name>MoveProxy</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>aabb</declname>
        </param>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>displacement</declname>
        </param>
        <briefdescription>
<para>Move a proxy with a swepted <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>. If the proxy has moved outside of its fattened <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>, then the proxy is removed from the tree and re-inserted. Otherwise the function returns immediately. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displacement</parametername>
</parameternamelist>
<parameterdescription>
<para>The displacement.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the proxy was re-inserted.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="241" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="241" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abec85eb21b177f36645e7e11ac673aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.SetUserData</definition>
        <argsstring>(int proxyId, T userData)</argsstring>
        <name>SetUserData</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <param>
          <type>T</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
<para>Set proxy user data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="293" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a804d6a3eaa9062dcc32cae5abb9d7ef1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.GetUserData</definition>
        <argsstring>(int proxyId)</argsstring>
        <name>GetUserData</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Get proxy user data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proxy user data or 0 if the id is invalid.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="304" column="18" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a9c752aa02648d375da23a41b3dc3781f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.GetFatAABB</definition>
        <argsstring>(int proxyId, out AABB fatAABB)</argsstring>
        <name>GetFatAABB</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <param>
          <type>out <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>fatAABB</declname>
        </param>
        <briefdescription>
<para>Get the fat <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref> for a proxy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fatAABB</parametername>
</parameternamelist>
<parameterdescription>
<para>The fat <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="315" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a407ff7c2ece7ba153342f8b634aae2ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
        <definition>AABB tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.GetFatAABB</definition>
        <argsstring>(int proxyId)</argsstring>
        <name>GetFatAABB</name>
        <param>
          <type>int</type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Get the fat <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref> for a proxy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fat <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="326" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="326" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abb840b71f7cb04c96c79f5c55134f5be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.TestFatAABBOverlap</definition>
        <argsstring>(int proxyIdA, int proxyIdB)</argsstring>
        <name>TestFatAABBOverlap</name>
        <param>
          <type>int</type>
          <declname>proxyIdA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proxyIdB</declname>
        </param>
        <briefdescription>
<para>Test overlap of fat AABBs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxyIdA</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id A.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proxyIdB</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy id B.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="337" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="337" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a0ce037a5d3d1a4140fc8969ef709cfe3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.Query</definition>
        <argsstring>(BroadPhaseQueryCallback callback, ref AABB aabb)</argsstring>
        <name>Query</name>
        <param>
          <type>BroadPhaseQueryCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref></type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
<para>Query an <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref> for overlapping proxies. The callback class is called for each proxy that overlaps the supplied <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="350" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="350" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a47022000b096c1499d6dc8de731f0e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.RayCast</definition>
        <argsstring>(BroadPhaseRayCastCallback callback, ref RayCastInput input)</argsstring>
        <name>RayCast</name>
        <param>
          <type>BroadPhaseRayCastCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>ref <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_ray_cast_input" kindref="compound">RayCastInput</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case were the proxy contains a Shape. The callback also performs the any collision filtering. This has performance roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback class that is called for each proxy that is hit by the ray.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="393" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="393" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a5856bf1308cc5231dd99ced8d98374be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.ComputeHeight</definition>
        <argsstring>(int nodeId)</argsstring>
        <name>ComputeHeight</name>
        <param>
          <type>int</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
<para>Compute the height of a sub-tree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeId</parametername>
</parameternamelist>
<parameterdescription>
<para>The node id to use as parent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The height of the tree.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="879" column="20" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="879" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a2f06e47bef9a5d3302bd6d64b3dc6caa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.ComputeHeight</definition>
        <argsstring>()</argsstring>
        <name>ComputeHeight</name>
        <briefdescription>
<para>Compute the height of the entire tree. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The height of the tree.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="898" column="20" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="898" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a844177c4a22fd6579a89d892cb316685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.ValidateStructure</definition>
        <argsstring>(int index)</argsstring>
        <name>ValidateStructure</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="904" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="904" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aa75619d9c0d687501b95a18c222d1ad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.ValidateMetrics</definition>
        <argsstring>(int index)</argsstring>
        <name>ValidateMetrics</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="939" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="939" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ac6629f6cf40323a6ed7b339d26f02fb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.Validate</definition>
        <argsstring>()</argsstring>
        <name>Validate</name>
        <briefdescription>
<para>Validate this tree. For testing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="980" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="980" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1acd88f74eab4ea863af1895613d30c1e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.RebuildBottomUp</definition>
        <argsstring>()</argsstring>
        <name>RebuildBottomUp</name>
        <briefdescription>
<para>Build an optimal tree. Very expensive. For testing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="1002" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="1002" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aeb7515316a5be319b1f5bd2301c3c0db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.ShiftOrigin</definition>
        <argsstring>(Vector2 newOrigin)</argsstring>
        <name>ShiftOrigin</name>
        <param>
          <type><ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_common_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>newOrigin</declname>
        </param>
        <briefdescription>
<para>Shift the origin of the nodes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newOrigin</parametername>
</parameternamelist>
<parameterdescription>
<para>The displacement to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="1081" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="1081" bodyend="1089"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a1394492c63cd6df9c933f587bc8685b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.AllocateNode</definition>
        <argsstring>()</argsstring>
        <name>AllocateNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="477" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="477" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aa3ce01ad4a43b211574f359fdbb17776" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.FreeNode</definition>
        <argsstring>(int nodeId)</argsstring>
        <name>FreeNode</name>
        <param>
          <type>int</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="515" column="22" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="515" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1af53a3820b7ef9deedcb4005d35daa184" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.InsertLeaf</definition>
        <argsstring>(int leaf)</argsstring>
        <name>InsertLeaf</name>
        <param>
          <type>int</type>
          <declname>leaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="525" column="22" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="525" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a346c3baa866fcc8eb915cb52c5d16971" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.RemoveLeaf</definition>
        <argsstring>(int leaf)</argsstring>
        <name>RemoveLeaf</name>
        <param>
          <type>int</type>
          <declname>leaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="663" column="22" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="663" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a7b9fc62f567ecf59236d7757d4fdfd65" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tainicom.Aether.Physics2D.Collision.DynamicTree&lt; T &gt;.Balance</definition>
        <argsstring>(int iN)</argsstring>
        <name>Balance</name>
        <param>
          <type>int</type>
          <declname>iN</declname>
        </param>
        <briefdescription>
<para>Perform a left or right rotation if node N is imbalanced. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iN</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new root index.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Physics2D/Collision/DynamicTree.cs" line="727" column="21" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="727" bodyend="872"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref>. In the tree we expand the proxy <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref> by Settings.b2_fatAABBFactor so that the proxy <ref refid="structtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_a_a_b_b" kindref="compound">AABB</ref> is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update. </para>
    </briefdescription>
    <detaileddescription>
<para>Nodes are pooled and relocatable, so we use node indices rather than pointers.</para>
    </detaileddescription>
    <location file="Physics2D/Collision/DynamicTree.cs" line="85" column="11" bodyfile="Physics2D/Collision/DynamicTree.cs" bodystart="86" bodyend="1090"/>
    <listofallmembers>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a392264c69da341e7bbffb70c555653d9" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_freeList</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ab951266bb53532bd05b313fb86e1e39e" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_nodeCapacity</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ae9cfb5cfa022f4ec3fba4a15794467f6" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_nodeCount</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a00496241f4c9dc2bc46753ec749dbdb6" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_nodes</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a4143024fbb4be1971095f47d2fdf340b" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_queryStack</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a170be8c96fea632a3fc62c7769380395" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_raycastStack</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a8b5b55187279ed5e8dfbbaa42a849a31" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>_root</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a6b9fdf6dae436c1f9d4089f62b4bccf5" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>AddProxy</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a1394492c63cd6df9c933f587bc8685b6" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>AllocateNode</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abc970b94d79de90b525e1c06118aeb02" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>AreaRatio</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a7b9fc62f567ecf59236d7757d4fdfd65" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>Balance</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a5856bf1308cc5231dd99ced8d98374be" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>ComputeHeight</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a2f06e47bef9a5d3302bd6d64b3dc6caa" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>ComputeHeight</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1af7b0eabf058ebd2551617d6a4a85686e" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>DynamicTree</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aa3ce01ad4a43b211574f359fdbb17776" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>FreeNode</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a9c752aa02648d375da23a41b3dc3781f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>GetFatAABB</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a407ff7c2ece7ba153342f8b634aae2ac" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>GetFatAABB</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a804d6a3eaa9062dcc32cae5abb9d7ef1" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>GetUserData</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ac5973aefbe658d2fc285fc1fba3e4426" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>Height</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1af53a3820b7ef9deedcb4005d35daa184" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>InsertLeaf</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a6e68eb87b6fd9f4cddf818d014c5de62" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>MaxBalance</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1addf172ec5c146b53876d3b1c46136182" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>MoveProxy</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a42cc1c62a792fcc3c3b9e3fba4cd7d2b" prot="package" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>NullNode</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a0ce037a5d3d1a4140fc8969ef709cfe3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>Query</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a47022000b096c1499d6dc8de731f0e7f" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>RayCast</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1acd88f74eab4ea863af1895613d30c1e5" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>RebuildBottomUp</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a346c3baa866fcc8eb915cb52c5d16971" prot="private" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>RemoveLeaf</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a2bec2185e5b0d157067c370f7f51323c" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>RemoveProxy</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abec85eb21b177f36645e7e11ac673aa0" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>SetUserData</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aeb7515316a5be319b1f5bd2301c3c0db" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>ShiftOrigin</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1abb840b71f7cb04c96c79f5c55134f5be" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>TestFatAABBOverlap</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1ac6629f6cf40323a6ed7b339d26f02fb3" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>Validate</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1aa75619d9c0d687501b95a18c222d1ad7" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>ValidateMetrics</name></member>
      <member refid="classtainicom_1_1_aether_1_1_physics2_d_1_1_collision_1_1_dynamic_tree_1a844177c4a22fd6579a89d892cb316685" prot="public" virt="non-virtual"><scope>tainicom::Aether::Physics2D::Collision::DynamicTree</scope><name>ValidateStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
